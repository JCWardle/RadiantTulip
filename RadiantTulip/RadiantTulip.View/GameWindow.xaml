<Window x:Class="RadiantTulip.View.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:g="clr-namespace:RadiantTulip.View"
        xmlns:VM="clr-namespace:RadiantTulip.View.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cp="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="MainWindow" Height="600" Width="1200"
        Background="#494949">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding ResizeCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <DataTemplate x:Key="SingleAffectSelector">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{Binding}"/>
                        <CheckBox>
                            <CheckBox.IsChecked>
                                <MultiBinding Converter="{StaticResource affectSelected}" Mode="OneWay">
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                                    <Binding Path="."/>
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.VisualAffects" />
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers.Count" />
                                </MultiBinding>
                            </CheckBox.IsChecked>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.PlayerAffectCheckedCommand}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.PlayerAffectUncheckedCommand}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=Children[0].Children[1].IsChecked, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource AncestorType=StackPanel}}">
                        <ItemsControl>
                            <ItemsControl.ItemsSource>
                                <MultiBinding Converter="{StaticResource visualAffectOptionsConverter}" Mode="OneWay">
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                                    <Binding Path="."/>
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.VisualAffects" />
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers.Count" />
                                    <Binding RelativeSource="{RelativeSource AncestorType=StackPanel}" Path="Visibility"/>
                                </MultiBinding>
                            </ItemsControl.ItemsSource>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="PlayerSelectorTemplate">
                <ScrollViewer>
                    <ListBox ItemsSource="{Binding Players}" SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.SelectedPlayers, Mode=OneWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.PlayerSelectedCommand}"
                                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid x:Name="PlayerSelector">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20px"/>
                                        <ColumnDefinition Width="105px"/>
                                        <ColumnDefinition Width="20px"/>
                                        <ColumnDefinition Width="20px"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Column="0">
                                        <CheckBox.IsChecked>
                                            <MultiBinding Converter="{StaticResource isSelected}" Mode="OneWay">
                                                <Binding RelativeSource="{RelativeSource Self}" Path="DataContext" />
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers.Count"/>
                                            </MultiBinding>
                                        </CheckBox.IsChecked>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.PlayerCheckedCommand}" 
                                                                               CommandParameter="{Binding}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unchecked">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.PlayerUncheckedCommand}" 
                                                                               CommandParameter="{Binding}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                    <Label Content="{Binding Name}" Grid.Column="1"/>
                                    <StackPanel Grid.Column="2" Style="{StaticResource PlayerVisibility}" Width="20px" Height="20px" Visibility="{Binding Visible, Converter={StaticResource invertBoolToVisibilityConverter}}" />
                                    <StackPanel Width="20px" Height="20px" HorizontalAlignment="Right" Grid.Column="3">
                                        <StackPanel.Background>
                                            <SolidColorBrush Color="{Binding Colour}"/>
                                        </StackPanel.Background>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
            </DataTemplate>

            <DataTemplate x:Key="GroupSelectorTemplate">
                <ScrollViewer>
                    <ListBox ItemsSource="{Binding}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.GroupSelectedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Binding Name}"/>
                                    <Label Content="{Binding Players.Count}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <VM:GameViewModel/>
    </Window.DataContext>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="200"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!--Player Selection on left-->
        <TabControl Grid.Column="0" Name="PlayerTabs">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding SelectionTabLoadedCommand}">
                        <i:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource tabCreatorConverter}">
                                <Binding Source="{StaticResource PlayerSelectorTemplate}"  Mode="OneWay"/>
                                <Binding Source="{StaticResource GroupSelectorTemplate}" Mode="OneWay"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type TabControl}}" Mode="OneWay"/>
                            </MultiBinding>
                        </i:InvokeCommandAction.CommandParameter>
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TabControl>


        <DockPanel Grid.Column="1" Style="{StaticResource WhiteBackground}">            
            <!--Play Controls-->
            <Grid DockPanel.Dock="Bottom">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Slider Grid.Row="0" 
                    Value="{Binding CurrentTimeMilliseconds}"
                    Maximum="{Binding RunTime.TotalMilliseconds}"
                    Minimum="0"
                    TickFrequency="{Binding FrameIncrement}"
                    IsSnapToTickEnabled="True"/>
                <StackPanel HorizontalAlignment="Center" Grid.Row="1" Orientation="Horizontal" >
                    <Button Content="Stop" Style="{StaticResource Stop}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding StopCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Rewind" Style="{StaticResource Reverse}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding RewindCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Play" Style="{StaticResource Play}" Visibility="{Binding Converter={StaticResource invertBoolToVisibilityConverter}, Path=Playing}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding PlayCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Pause" Style="{StaticResource Pause}" Visibility="{Binding Converter={StaticResource boolToVisibility}, Path=Playing}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding PauseCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Forward" Style="{StaticResource FastForward}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ForwardCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Rec"/>
                    <Label Content="{Binding CurrentTime}" Style="{StaticResource GameTime}"/>
                </StackPanel>
            </Grid>

            <!-- Game Display-->
            <Border DockPanel.Dock="Top">
                <Canvas Name="Game" MouseUp="Game_MouseUp"/>
            </Border>
        </DockPanel>
        
        <!-- Context Panel -->
        <Grid Grid.Column="2" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>
                       
            <!-- Single Player Selection Context -->
            <StackPanel Grid.Row="0" Visibility="{Binding State, Converter={StaticResource singleSelectConverter}, Mode=OneWay}">
                <Label Name="PlayerName" Content="{Binding SelectedPlayers, Converter={StaticResource playerNameConverter}, Mode=OneWay}"/>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Speed:"/>
                    <Label>
                        <Label.Content>
                            <MultiBinding Converter="{StaticResource playerSpeedConverter}" Mode="OneWay">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                                <!-- Speed Tuner -->
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SpeedTuner"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.CurrentTimeMilliseconds" />
                            </MultiBinding>
                        </Label.Content>
                    </Label>
                    <Label Content="m/s"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Speed Tuner:" />
                    <TextBox Text="{Binding SpeedTunerMilliseconds, UpdateSourceTrigger=PropertyChanged}" Width="100px" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Distance Covered:"/>
                    <Label>
                        <Label.Content>
                            <MultiBinding Converter="{StaticResource distanceCoveredConverter}" Mode="OneWay">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.CurrentTimeMilliseconds" />
                            </MultiBinding>
                        </Label.Content>
                    </Label>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding PlayerAffects}" ItemTemplate="{DynamicResource SingleAffectSelector}" />
            </StackPanel>
            
             <!-- Multiple Player Selection Context -->
            <StackPanel Grid.Row="0" Visibility="{Binding State, Converter={StaticResource multipleSelectConverter}, Mode=OneWay}">
                <Label Content="New Group" Style="{StaticResource Heading}" />
                <Label Content="Group Name:" Style="{StaticResource FieldLabel}"/>
                <TextBox Name="GroupName"/>
                <Button Content="Create Group">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CreateGroupCommand}" CommandParameter="{Binding ElementName=GroupName, Path=Text}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <ItemsControl ItemsSource="{Binding PlayerAffects}" ItemTemplate="{DynamicResource SingleAffectSelector}" />
            </StackPanel>
            
            <!-- Group Selection Context -->
            <StackPanel Grid.Row="0" Visibility="{Binding State, Converter={StaticResource groupSelectConverter}, Mode=OneWay}">
                <Label FontSize="14" Content="{Binding SelectedGroup.Name}" />
                <ItemsControl ItemsSource="{Binding SelectedGroup.Players}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Name}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding GroupAffects}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding}"/>
                                <CheckBox>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Checked">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.GroupAffectCheckedCommand}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unchecked">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.GroupAffectUncheckedCommand}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>

            <!-- Player Context Controls -->
            <UniformGrid Grid.Row="1" Rows="2" Name="Tools">
                <ComboBox Name="SizeSelector" ItemsSource="{Binding SizeOptions}" Style="{StaticResource ContextControl}">
                    <ComboBox.SelectedValue>
                        <MultiBinding Converter="{StaticResource selectedSize}" Mode="OneWay">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedGroup" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.State" />
                        </MultiBinding>
                    </ComboBox.SelectedValue>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SizeChangedCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <cp:ColorPicker Name="ColourSelector" Style="{StaticResource ContextControl}"
                        ShowAdvancedButton="False">
                    <cp:ColorPicker.SelectedColor>
                        <MultiBinding Converter="{StaticResource selectedColour}" Mode="OneWay">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedGroup" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.State" />
                        </MultiBinding>
                    </cp:ColorPicker.SelectedColor>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedColorChanged">
                            <i:InvokeCommandAction Command="{Binding ColourChangedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type cp:ColorPicker}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </cp:ColorPicker>
                <ComboBox Name="ShapeSelector" ItemsSource="{Binding ShapeOptions}" Style="{StaticResource ContextControl}">
                    <ComboBox.SelectedValue>
                        <MultiBinding Converter="{StaticResource selectedShape}" Mode="OneWay">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedGroup" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.State" />
                        </MultiBinding>
                    </ComboBox.SelectedValue>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ShapeChangedCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <ToggleButton Name="VisibilitySelector" Style="{StaticResource VisibilityToggle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding VisibilityChangedCommand}" CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ToggleButton.IsChecked>
                        <MultiBinding Converter="{StaticResource selectedVisibilityConverter}" Mode="OneWay">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedPlayers" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.SelectedGroup" />
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}" Path="DataContext.State" />
                        </MultiBinding>
                    </ToggleButton.IsChecked>
                </ToggleButton>
            </UniformGrid>
        </Grid>
    </Grid>
</Window>